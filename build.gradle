plugins {
    id 'java'
}

ext {
    configuration = [
            javaVersion = JavaVersion.VERSION_1_8
    ]

    versions = [
            mybatisPlusVersion = '3.5.2',
            mybatisPpVersion = '3.5.2-1',
            springExpressionVersion = '5.3.23',
            lombokVersion = '1.18.24',
            junitVersion = '5.9.0',
    ]

    lib = [
            // mybatis-plus
            "mybatisPlus"           : "com.baomidou:mybatis-plus:${mybatisPlusVersion}",
            "mybatisPlusCore"       : "com.baomidou:mybatis-plus-core:${mybatisPlusVersion}",
            "mybatisPlusAnnotation" : "com.baomidou:mybatis-plus-annotation:${mybatisPlusVersion}",
            "mybatisPlusExtension"  : "com.baomidou:mybatis-plus-extension:${mybatisPlusVersion}",
            "mybatisPlusBootStarter": "com.baomidou:mybatis-plus-boot-starter:${mybatisPlusVersion}",

            // spring
            "springExpression"      : "org.springframework:spring-expression:${springExpressionVersion}",

            // other
            "lombok"                : "org.projectlombok:lombok:${lombokVersion}",
            "junit-api"             : "org.junit.jupiter:junit-jupiter-api:${junitVersion}",
            "junit-engine"          : "org.junit.jupiter:junit-jupiter-engine:${junitVersion}",
    ]
}

allprojects {
    group = 'com.kovizone'
    version = "${mybatisPpVersion}" as Object

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'signing'
    apply plugin: 'maven-publish'

    repositories {
        mavenCentral()
        mavenLocal()
        maven { url "https://maven.aliyun.com/repository/public" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    }

    dependencies {
        testImplementation "${lib."junit-api"}"
        testRuntimeOnly "${lib."junit-engine"}"

        compileOnly "${lib."lombok"}"
        annotationProcessor "${lib."lombok"}"
        testCompileOnly "${lib."lombok"}"
        testAnnotationProcessor "${lib."lombok"}"
    }

    task sourcesJar(type: Jar) {
        from sourceSets.main.allSource
        archiveClassifier = 'sources'
    }

    task javadocJar(type: Jar) {
        archiveClassifier = 'javadoc'
        from javadoc
    }

    javadoc {
        afterEvaluate {
            configure(options) {
                encoding "UTF-8"
                charSet 'UTF-8'
                author true
                version true
                failOnError false
                links "http://docs.oracle.com/javase/8/docs/api"
            }
        }
    }

    tasks.whenTaskAdded { task ->
        if (task.name.contains('signMavenJavaPublication')) {
            task.enabled = new File(project.property('signing.secretKeyRingFile') as String).isFile()
        }
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java

                artifact sourcesJar
                artifact javadocJar

                pom {
                    name = 'mybatis-pp'
                    packaging 'jar'
                    description = 'mybatis plus plus.'
                    url = 'https://github.com/kovizone/mybatis-pp'

                    scm {
                        url = 'https://github.com/kovizone/mybatis-pp'
                        connection = 'scm:git:https://github.com/kovizone/mybatis-pp.git'
                        developerConnection = 'scm:git:https://github.com/kovizone/mybatis-pp.git'
                    }

                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }

                    developers {
                        developer {
                            id = 'kovizone'
                            name = 'kovi'
                            email = 'kovichen@163.com'
                        }
                    }
                }
            }
        }
        repositories {

            maven {
                def userName = System.getProperty("un")
                def passWord = System.getProperty("ps")
                url "https://oss.sonatype.org/service/local/staging/deploy/maven2/"

                credentials {
                    username userName
                    password passWord
                }
            }
        }

        signing {
            sign publishing.publications.mavenJava
        }
    }
}